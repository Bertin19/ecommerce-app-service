services:
  postgres:
    container_name: ms-postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: keycloak
    volumes:
        - postgres:/var/lib/postgresql/data
    ports:
        - "5432:5432"
    networks:
        - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
        - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
        - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: mongo
    image: mongo
    volumes:
        - mongo:/data
    ports:
        - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
        - microservices-net
    restart: always

  mongo-express:
    container_name: ms-mongo-express
    image: mongo-express
    restart: always
    ports:
        - "8081:8081"
    environment:
        - ME_CONFIG_MONGODB_SERVER=mongo
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root
        - ME_CONFIG_MONGODB_ADMINPASSWORD=root
        - ME_CONFIG_BASICAUTH=false
    networks:
        - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: ZOOKEEPER:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
        - "1080:1080"
        - "1025:1025"
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  keycloak:
    container_name: ms-keycloak
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "9098:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: ms-postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    volumes:
      - ./tools/local/keycloak/keycloak.json:/opt/keycloak/data/import/keycloak.json
    networks:
      - microservices-net
    depends_on:
      - postgres
    command:
      - "start-dev"
      - "--import-realm"


networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: